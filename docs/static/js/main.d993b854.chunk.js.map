{"version":3,"sources":["components/layout.js","components/grid.js","components/card.js","components/arrow.js","utils/history.js","views/login.js","components/textFieldWithIcon.js","components/checkbox.js","components/goBackButton.js","views/register.js","views/profileEdit.js","App.js","serviceWorker.js","index.js"],"names":["install","theme","createMuiTheme","typography","useNextVariants","palette","primary","main","secondary","default","useStyles","makeStyles","root","flexGrow","app","Layout","_ref","children","classes","react_default","a","createElement","className","index_es","GridView","marginTop","GridItem","boxShadow","_ref$spacing","spacing","_ref$justify","justify","_ref$alignItems","alignItems","_ref$direction","direction","Grid_default","container","_ref2","xs","item","card","padding","unit","textAlign","color","text","minWidth","width","background","cardActions","float","cardHeader","action","CardComponent","actionComponent","cardHeaderActionComponent","_ref$title","title","_ref$subtitle","subtitle","Card_default","CardHeader_default","subheader","CardContent_default","CardActions_default","button","border","borderRadius","height","icon","ArrowRightButton","_ref$onClick","onClick","_ref$disabled","disabled","Fab_default","ArrowForward_default","fontSize","ArrowLeftButton","_ref2$onClick","_ref2$disabled","ArrowBack_default","createBrowserHistory","textField","marginLeft","marginRight","Login","_useGlobal","useGlobal","_useGlobal2","Object","slicedToArray","userInfo","setUserInfo","_useGlobal3","setLogin","_useState","useState","username","password","_useState2","validator","setValidator","checkValidationField","key","value","Validator","isEmail","objectSpread","isEmpty","build_default","grid_GridView","grid_GridItem","values","includes","alert","TextField_default","variant","error","margin","label","type","autoFocus","onChange","e","target","Button_default","prompt","lib","history","push","TextFieldWithIcon","IconComponent","_ref$onChange","_ref$variant","CheckboxComponent","_ref$label","checked","FormControlLabel_default","control","Checkbox_default","GobackButton","IconButton_default","goBack","Register","email","name","validtion","goBackButton","textFieldWithIcon","AccountCircle_default","EmailRounded_default","Lock_default","components_checkbox","formControl","previewImage","FirstTimeEdit","step","setStep","CardModify","sex","phone","FormControl_default","InputLabel_default","Select_default","university","input","FilledInput_default","MenuItem_default","universities","map","data","index","display","length","accept","reader","FileReader","readAsDataURL","files","onloadend","result","src","alt","ProfileEditor","ProfileEdit","search","location","queryString","parse","setGlobal","isLogin","App","layout","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d993b854.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles, ThemeProvider, install } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\ninstall();\r\n\r\nconst theme = createMuiTheme({\r\n\ttypography: { useNextVariants: true },\r\n\tpalette: {\r\n\t\tprimary: { main: '#FD297B' },\r\n\t\tsecondary: { main: '#424242' },\r\n\t\tdefault: { main: '#FF655B' },\r\n\t},\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tapp: {},\r\n}));\r\n\r\nfunction Layout({ children }) {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<div className={classes.root}>{children}</div>\r\n\t\t\t</ThemeProvider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { makeStyles } from '@material-ui/styles/';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tGridView: {\r\n\t\tmarginTop: '2.5%',\r\n\t},\r\n\tGridItem: {\r\n\t\tboxShadow: '25',\r\n\t},\r\n}));\r\n\r\nconst GridView = ({\r\n\tchildren,\r\n\tspacing = 16,\r\n\tjustify = 'center',\r\n\talignItems = 'center',\r\n\tdirection = 'column',\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer\r\n\t\t\tdirection={direction}\r\n\t\t\talignItems={alignItems}\r\n\t\t\tspacing={spacing}\r\n\t\t\tjustify={justify}\r\n\t\t\tclassName={classes.GridView}>\r\n\t\t\t{children}\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst GridItem = ({ children, xs }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Grid className={classes.GridItem} xs={xs} item>\r\n\t\t\t{children}\r\n\t\t</Grid>\r\n\t);\r\n};\r\nexport { GridView, GridItem };\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles/';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tcard: {\r\n\t\tpadding: theme.spacing.unit * 2,\r\n\t\ttextAlign: 'center',\r\n\t\tcolor: theme.palette.text.secondary,\r\n\t\tminWidth: 500,\r\n\t\twidth: '600px',\r\n\t\tbackground: '#eeeeee',\r\n\t},\r\n\tcardActions: {\r\n\t\tfloat: 'right',\r\n\t},\r\n\tcardHeader: {\r\n\t\taction: {\r\n\t\t\tfloat: 'left',\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction CardComponent({\r\n\tchildren,\r\n\tactionComponent,\r\n\tcardHeaderActionComponent,\r\n\ttitle = '',\r\n\tsubtitle = '',\r\n}) {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Card className={classes.card}>\r\n\t\t\t<CardHeader\r\n\t\t\t\tclassName={classes.cardHeader}\r\n\t\t\t\taction={cardHeaderActionComponent}\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tsubheader={subtitle}\r\n\t\t\t/>\r\n\t\t\t<CardContent>{children}</CardContent>\r\n\t\t\t<CardActions className={classes.cardActions}>\r\n\t\t\t\t{actionComponent}\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default CardComponent;\r\n","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport { makeStyles } from '@material-ui/styles/';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tbutton: {\r\n\t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n\t\tborder: 0,\r\n\t\tborderRadius: '50%',\r\n\t\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n\t\tcolor: 'white',\r\n\t\theight: 60,\r\n\t\tpadding: '0 30px',\r\n\t},\r\n\ticon: {\r\n\t\tcolor: 'white',\r\n\t},\r\n}));\r\n\r\nfunction ArrowRightButton({ onClick = () => {}, disabled = false }) {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Fab disabled={disabled} className={classes.button} onClick={onClick}>\r\n\t\t\t<ArrowForwardIcon className={classes.icon} fontSize=\"default\" />\r\n\t\t</Fab>\r\n\t);\r\n}\r\n\r\nfunction ArrowLeftButton({ onClick = () => {}, disabled = false }) {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Fab disabled={disabled} className={classes.button} onClick={onClick}>\r\n\t\t\t<ArrowBackIcon className={classes.icon} fontSize=\"default\" />\r\n\t\t</Fab>\r\n\t);\r\n}\r\n\r\nexport { ArrowRightButton, ArrowLeftButton };\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React, { useGlobal, useState } from 'reactn';\r\nimport Validator from 'validator';\r\nimport { makeStyles } from '@material-ui/styles/';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n\tFacebookLoginButton,\r\n\tGoogleLoginButton,\r\n} from 'react-social-login-buttons';\r\nimport { GridView, GridItem } from '../components/grid';\r\nimport Card from '../components/card';\r\nimport { ArrowRightButton } from '../components/arrow';\r\nimport history from '../utils/history';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing.unit,\r\n\t\tmarginRight: theme.spacing.unit,\r\n\t},\r\n}));\r\n\r\nfunction Login() {\r\n\tconst classes = useStyles();\r\n\tconst [userInfo, setUserInfo] = useGlobal('userInfo');\r\n\tconst [, setLogin] = useGlobal('isLogin');\r\n\tconst [validator, setValidator] = useState({\r\n\t\tusername: false,\r\n\t\tpassword: false,\r\n\t});\r\n\r\n\tconst checkValidationField = (key, value) => {\r\n\t\tswitch (key) {\r\n\t\t\tcase 'email': {\r\n\t\t\t\tValidator.isEmail(value)\r\n\t\t\t\t\t? setValidator({ ...validator, username: true })\r\n\t\t\t\t\t: setValidator({ ...validator, username: false });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'password': {\r\n\t\t\t\t!Validator.isEmpty(value)\r\n\t\t\t\t\t? setValidator({ ...validator, password: true })\r\n\t\t\t\t\t: setValidator({ ...validator, password: false });\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSignIn = () => {\r\n\t\tif (!Object.values(validator).includes(false)) {\r\n\t\t\tsetLogin(true);\r\n\t\t} else {\r\n\t\t\tsetLogin(false);\r\n\t\t\talert('Email หรือ รหัสผ่านไม่ถูกต้อง');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleForgetPassword = () => {\r\n\t\tprompt('กรอกอีเมล์เพื่อกู็คืนรหัสผ่าน');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridView>\r\n\t\t\t<GridItem>\r\n\t\t\t\t<Card\r\n\t\t\t\t\ttitle=\"Sign In\"\r\n\t\t\t\t\tactionComponent={<ArrowRightButton onClick={() => handleSignIn()} />}>\r\n\t\t\t\t\t<GridView>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\terror={!validator.username}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tvalue={userInfo.username}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\tsetUserInfo({\r\n\t\t\t\t\t\t\t\t\t\t...userInfo,\r\n\t\t\t\t\t\t\t\t\t\tusername: e.target.value,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tcheckValidationField('email', e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\terror={!validator.password}\r\n\t\t\t\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={userInfo.password}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\tsetUserInfo({\r\n\t\t\t\t\t\t\t\t\t\t...userInfo,\r\n\t\t\t\t\t\t\t\t\t\tpassword: e.target.value,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\tcheckValidationField('password', e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<Button onClick={() => handleForgetPassword()}>\r\n\t\t\t\t\t\t\t\tForgot Password!\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t</GridView>\r\n\t\t\t\t</Card>\r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem>\r\n\t\t\t\t<Card title=\"Or\">\r\n\t\t\t\t\t<GridView>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<FacebookLoginButton />\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<GoogleLoginButton />\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<Button onClick={() => history.push('/signup')}>Sign Up</Button>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t</GridView>\r\n\t\t\t\t</Card>\r\n\t\t\t</GridItem>\r\n\t\t</GridView>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction TextFieldWithIcon({\r\n\tIconComponent,\r\n\tlabel,\r\n\terror,\r\n\ttype,\r\n\tonChange = () => {},\r\n\tvariant = 'outlined',\r\n\tautoFocus,\r\n}) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Grid container spacing={8} alignItems=\"center\">\r\n\t\t\t\t<Grid item>{IconComponent}</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tautoFocus={autoFocus}\r\n\t\t\t\t\t\terror={error}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TextFieldWithIcon;\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nfunction CheckboxComponent({\r\n\tlabel = '',\r\n\tchecked,\r\n\tonChange = () => {},\r\n\tvalue,\r\n}) {\r\n\t\r\n\treturn (\r\n\t\t<FormControlLabel\r\n\t\t\tcontrol={\r\n\t\t\t\t<Checkbox\r\n\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tlabel={label}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\tlabel={label}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default CheckboxComponent;\r\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport LeftArrowIcon from '@material-ui/icons/ArrowBack';\nimport history from '../utils/history';\nfunction GobackButton() {\n\treturn (\n\t\t<IconButton onClick={() => history.goBack()}>\n\t\t\t<LeftArrowIcon />\n\t\t</IconButton>\n\t);\n}\n\nexport default GobackButton;\n","import React, { useGlobal, useState } from 'reactn';\r\nimport Validator from 'validator';\r\nimport {\r\n\tFacebookLoginButton,\r\n\tGoogleLoginButton,\r\n} from 'react-social-login-buttons';\r\nimport AccountIcon from '@material-ui/icons/AccountCircle';\r\nimport EmailIcon from '@material-ui/icons/EmailRounded';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { GridItem, GridView } from '../components/grid';\r\nimport Card from '../components/card';\r\nimport TextField from '../components/textFieldWithIcon';\r\nimport { ArrowRightButton } from '../components/arrow';\r\nimport Checkbox from '../components/checkbox';\r\nimport GoBackButton from '../components/goBackButton';\r\nimport history from '../utils/history';\r\n\r\nfunction Register() {\r\n\tconst [userInfo, setUserInfo] = useGlobal('userInfo');\r\n\tconst [, setLogin] = useGlobal('isLogin');\r\n\r\n\tconst [validator, setValidator] = useState({\r\n\t\temail: false,\r\n\t\tname: false,\r\n\t\tpassword: false,\r\n\t});\r\n\r\n\tconst handleSignUp = () => {\r\n\t\tif (!Object.values(validator).includes(false)) {\r\n\t\t\tsetLogin(true);\r\n\t\t\thistory.push('/edit?mode=first');\r\n\t\t} else {\r\n\t\t\tsetLogin(false);\r\n\t\t\talert('Email ชื่อ และรหัสผ่านไม่ถูกต้อง');\r\n\t\t}\r\n\t};\r\n\r\n\tconst validtion = (key, value) => {\r\n\t\tswitch (key) {\r\n\t\t\tcase 'name': {\r\n\t\t\t\tif (!Validator.isEmpty(value)) {\r\n\t\t\t\t\tsetValidator({\r\n\t\t\t\t\t\t...validator,\r\n\t\t\t\t\t\tname: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetValidator({\r\n\t\t\t\t\t\t...validator,\r\n\t\t\t\t\t\tname: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'email': {\r\n\t\t\t\tif (Validator.isEmail(value)) {\r\n\t\t\t\t\tsetValidator({\r\n\t\t\t\t\t\t...validator,\r\n\t\t\t\t\t\temail: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetValidator({\r\n\t\t\t\t\t\t...validator,\r\n\t\t\t\t\t\temail: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase 'password': {\r\n\t\t\t\tif (!Validator.isEmail(value)) {\r\n\t\t\t\t\tsetValidator({\r\n\t\t\t\t\t\t...validator,\r\n\t\t\t\t\t\tpassword: true,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetValidator({\r\n\t\t\t\t\t\t...validator,\r\n\t\t\t\t\t\tpassword: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<GridView>\r\n\t\t\t<GridItem>\r\n\t\t\t\t<Card\r\n\t\t\t\t\ttitle=\"Sign Up\"\r\n\t\t\t\t\tactionComponent={<ArrowRightButton onClick={() => handleSignUp()} />}\r\n\t\t\t\t\tcardHeaderActionComponent={<GoBackButton />}>\r\n\t\t\t\t\t<GridView>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\terror={!validator.name}\r\n\t\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tIconComponent={<AccountIcon />}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\tvalidtion('name', e.target.value);\r\n\t\t\t\t\t\t\t\t\tsetUserInfo({ ...userInfo, username: e.target.value });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\terror={!validator.email}\r\n\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\tIconComponent={<EmailIcon />}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\tvalidtion('email', e.target.value);\r\n\t\t\t\t\t\t\t\t\tsetUserInfo({ ...userInfo, email: e.target.value });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\terror={!validator.password}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tIconComponent={<LockIcon />}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\tvalidtion('password', e.target.value);\r\n\t\t\t\t\t\t\t\t\tsetUserInfo({ ...userInfo, password: e.target.value });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<Checkbox label=\"Agree Term of Services\" />\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t</GridView>\r\n\t\t\t\t</Card>\r\n\t\t\t</GridItem>\r\n\t\t\t<GridItem>\r\n\t\t\t\t<Card title=\"Or\">\r\n\t\t\t\t\t<GridView>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<FacebookLoginButton />\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t\t<GridItem>\r\n\t\t\t\t\t\t\t<GoogleLoginButton />\r\n\t\t\t\t\t\t</GridItem>\r\n\t\t\t\t\t</GridView>\r\n\t\t\t\t</Card>\r\n\t\t\t</GridItem>\r\n\t\t</GridView>\r\n\t);\r\n}\r\n\r\nexport default Register;\r\n","import React, { useGlobal, useState } from 'reactn';\n// import Validator from 'validator';\nimport { makeStyles } from '@material-ui/styles';\nimport queryString from 'qs';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { GridItem, GridView } from '../components/grid';\nimport Card from '../components/card';\nimport GoBackButton from '../components/goBackButton';\nimport { ArrowRightButton, ArrowLeftButton } from '../components/arrow';\nimport history from '../utils/history';\nimport universities from '../assets/universities.json';\n\nconst useStyles = makeStyles(theme => ({\n\tbutton: {\n\t\twidth: '200px',\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing.unit,\n\t\tminWidth: 120,\n\t},\n\tpreviewImage: {\n\t\theight: '150px',\n\t\twidth: '150px',\n\t\tborderRadius: '50%',\n\t},\n}));\n\nfunction FirstTimeEdit() {\n\tconst classes = useStyles();\n\tconst [step, setStep] = useState(1);\n\tconst [userInfo, setUserInfo] = useGlobal('userInfo');\n\n\t// const [validator, setValidator] = useState({\n\t// \tsex: false,\n\t// \tname: false,\n\t// \tuniversity: false,\n\t// \tdisplay: false,\n\t// });\n\n\tconst handleUpdate = () => {\n\t\t// if (!Object.values(validator).includes(false)) {\n\t\thistory.push('/edit');\n\t\t// } else {\n\t\t// \talert('Email ชื่อ และรหัสผ่านไม่ถูกต้อง');\n\t\t// }\n\t};\n\n\t// const validation = (key, value) => {\n\t// \tswitch (key) {\n\t// \t\tcase 1: {\n\t// \t\t\tif (userInfo.sex) {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\tsex: true,\n\t// \t\t\t\t});\n\t// \t\t\t} else {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\tsex: false,\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tcase 2: {\n\t// \t\t\tif (\n\t// \t\t\t\tValidator.isLength(value, {\n\t// \t\t\t\t\tkey1: { length: { is: 10 } },\n\t// \t\t\t\t\tkey2: {\n\t// \t\t\t\t\t\tlength: { minimum: 10 },\n\t// \t\t\t\t\t\tkey3: { length: { maximum: 10 } },\n\t// \t\t\t\t\t},\n\t// \t\t\t\t})\n\t// \t\t\t) {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\temail: true,\n\t// \t\t\t\t});\n\t// \t\t\t} else {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\temail: false,\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tcase 3: {\n\t// \t\t\tif (!Validator.isEmpty(value)) {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\tpassword: true,\n\t// \t\t\t\t});\n\t// \t\t\t} else {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\tpassword: false,\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tcase 4: {\n\t// \t\t\tif (!Validator.isEmpty(value)) {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\tpassword: true,\n\t// \t\t\t\t});\n\t// \t\t\t} else {\n\t// \t\t\t\tsetValidator({\n\t// \t\t\t\t\t...validator,\n\t// \t\t\t\t\tpassword: false,\n\t// \t\t\t\t});\n\t// \t\t\t}\n\t// \t\t\tbreak;\n\t// \t\t}\n\t// \t\tdefault:\n\t// \t\t\tbreak;\n\t// \t}\n\t// };\n\n\tconst CardModify = ({ title, children }) => (\n\t\t<Card\n\t\t\tcardHeaderActionComponent={<GoBackButton />}\n\t\t\tactionComponent={\n\t\t\t\t<GridView direction=\"row\" spacing={8}>\n\t\t\t\t\t<GridItem>\n\t\t\t\t\t\t<ArrowLeftButton\n\t\t\t\t\t\t\tdisabled={step === 1}\n\t\t\t\t\t\t\tonClick={() => setStep(step - 1)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GridItem>\n\t\t\t\t\t<GridItem>\n\t\t\t\t\t\t<ArrowRightButton\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (step < 4) {\n\t\t\t\t\t\t\t\t\tsetStep(step + 1);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\thandleUpdate();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GridItem>\n\t\t\t\t</GridView>\n\t\t\t}\n\t\t\ttitle={title}>\n\t\t\t{children}\n\t\t</Card>\n\t);\n\n\tconst Sex = () => (\n\t\t<CardModify title=\"What are you looking for\">\n\t\t\t<GridView>\n\t\t\t\t<GridItem>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={() => setUserInfo({ ...userInfo, sex: 'female' })}\n\t\t\t\t\t\tcolor={userInfo.sex === 'female' ? 'primary' : 'secondary'}>\n\t\t\t\t\t\tWoman\n\t\t\t\t\t</Button>\n\t\t\t\t</GridItem>\n\t\t\t\t<GridItem>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={() => setUserInfo({ ...userInfo, sex: 'male' })}\n\t\t\t\t\t\tcolor={userInfo.sex === 'male' ? 'primary' : 'secondary'}>\n\t\t\t\t\t\tMan\n\t\t\t\t\t</Button>\n\t\t\t\t</GridItem>\n\t\t\t</GridView>\n\t\t</CardModify>\n\t);\n\n\tconst PhoneNumberEdit = () => (\n\t\t<CardModify\n\t\t\ttitle=\"Phone Number\"\n\t\t\tcardHeaderActionComponent={<GoBackButton />}>\n\t\t\t<GridView>\n\t\t\t\t<GridItem>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tlabel=\"Phone no.\"\n\t\t\t\t\t\tvalue={userInfo.phone}\n\t\t\t\t\t\tonChange={e => setUserInfo({ ...userInfo, phone: e.target.value })}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t/>\n\t\t\t\t</GridItem>\n\t\t\t</GridView>\n\t\t</CardModify>\n\t);\n\n\tconst UniversityEdit = () => {\n\t\treturn (\n\t\t\t<CardModify\n\t\t\t\ttitle=\"University\"\n\t\t\t\tcardHeaderActionComponent={<GoBackButton />}>\n\t\t\t\t<GridView>\n\t\t\t\t\t<GridItem>\n\t\t\t\t\t\t<FormControl variant=\"filled\" className={classes.formControl}>\n\t\t\t\t\t\t\t<InputLabel>University</InputLabel>\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={userInfo.university}\n\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\tsetUserInfo({ ...userInfo, university: e.target.value })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tinput={<FilledInput />}>\n\t\t\t\t\t\t\t\t<MenuItem value=\"\">\n\t\t\t\t\t\t\t\t\t<em>None</em>\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t{universities.map((data, index) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={data.university}>\n\t\t\t\t\t\t\t\t\t\t{data.university}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</GridItem>\n\t\t\t\t</GridView>\n\t\t\t</CardModify>\n\t\t);\n\t};\n\n\tconst PictureChoose = () => {\n\t\treturn (\n\t\t\t<CardModify\n\t\t\t\ttitle=\"Show your face\"\n\t\t\t\tcardHeaderActionComponent={<GoBackButton />}>\n\t\t\t\t<GridView>\n\t\t\t\t\t<GridItem>\n\t\t\t\t\t\t{userInfo.display.length <= 0 && (\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tconst reader = new FileReader();\n\t\t\t\t\t\t\t\t\treader.readAsDataURL(e.target.files[0]);\n\t\t\t\t\t\t\t\t\treader.onloadend = function(e) {\n\t\t\t\t\t\t\t\t\t\tsetUserInfo({ ...userInfo, display: reader.result });\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{userInfo.display && (\n\t\t\t\t\t\t\t<GridView>\n\t\t\t\t\t\t\t\t<GridItem>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName={classes.previewImage}\n\t\t\t\t\t\t\t\t\t\tsrc={userInfo.display}\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t\t\t<GridItem>\n\t\t\t\t\t\t\t\t\t<Button color=\"primary\">Change</Button>\n\t\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t\t</GridView>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</GridItem>\n\t\t\t\t</GridView>\n\t\t\t</CardModify>\n\t\t);\n\t};\n\n\treturn (\n\t\t<GridView>\n\t\t\t<GridItem>\n\t\t\t\t<GridView>\n\t\t\t\t\t{step === 1 && <Sex />}\n\t\t\t\t\t{step === 2 && <PhoneNumberEdit />}\n\t\t\t\t\t{step === 3 && <UniversityEdit />}\n\t\t\t\t\t{step === 4 && <PictureChoose />}\n\t\t\t\t</GridView>\n\t\t\t</GridItem>\n\t\t</GridView>\n\t);\n}\n\nfunction ProfileEditor() {\n\treturn (\n\t\t<GridView>\n\t\t\t<GridItem>\n\t\t\t\t<GridView>\n\t\t\t\t\t<Card />\n\t\t\t\t</GridView>\n\t\t\t</GridItem>\n\t\t</GridView>\n\t);\n}\n\nfunction ProfileEdit({ location: { search } }) {\n\tconst qs = queryString.parse(search);\n\tconst mode = qs['?mode'];\n\tswitch (mode) {\n\t\tcase 'first':\n\t\t\treturn <FirstTimeEdit />;\n\t\tdefault:\n\t\t\treturn <ProfileEditor />;\n\t}\n}\n\nexport default ProfileEdit;\n","import React, { setGlobal } from 'reactn';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport Layout from './components/layout';\r\nimport Login from './views/login';\r\nimport Register from './views/register';\r\nimport ProfileEdit from './views/profileEdit';\r\nimport history from './utils/history';\r\n\r\nsetGlobal({\r\n\tisLogin: false,\r\n\tuserInfo: {\r\n\t\tusername: '',\r\n\t\tpassword: '',\r\n\t\tsex: '',\r\n\t\tuniversity: '-',\r\n\t\tphone: '',\r\n\t\tdisplay: '',\r\n\t},\r\n});\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<Router history={history}>\r\n\t\t\t\t<Route path=\"/\" exact component={Login} />\r\n\t\t\t\t<Route path=\"/signup\" component={Register} />\r\n\t\t\t\t<Route path=\"/edit\" component={ProfileEdit} />\r\n\t\t\t</Router>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}